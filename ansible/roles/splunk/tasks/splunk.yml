---

- name: Ensure splunk group exists with correct gid
  become: true
  ansible.builtin.group:
    name: "{{ SPLUNK_GROUP_NAME }}"
    gid: "{{ SPLUNK_GROUP_GID }}"
    state: present

- name: Add the splunk user to the splunk group
  become: true
  ansible.builtin.user:
    name: "{{ SPLUNK_ACCOUNT_NAME }}"
    comment: Splunk Developer
    uid: "{{ SPLUNK_ACCOUNT_UID }}"
    group: "{{ SPLUNK_GROUP_NAME }}"

- name: Extract splunk
  become: true
  ansible.builtin.unarchive:
    src: "{{ splunk.SPLUNK.src }}"
    dest: /opt
    creates: /opt/splunk

- name: Copy user-seed.conf
  become: true
  ansible.builtin.copy:
    src: user-seed.conf
    dest: /opt/splunk/etc/system/local/user-seed.conf

- name: Recursively change ownership of /opt/splunk
  become: true
  ansible.builtin.file:
    path: /opt/splunk
    state: directory
    recurse: yes
    owner: "{{ SPLUNK_ACCOUNT_NAME }}"
    group: "{{ SPLUNK_GROUP_NAME }}"

- name: Start splunk for the first time
  become: true
  become_user: "{{ SPLUNK_ACCOUNT_NAME }}"
  ansible.builtin.command:
    cmd: /opt/splunk/bin/splunk start --accept-license --answer-yes --no-prompt
    creates: /etc/init.d/splunk

- name: Stop splunk after the first start
  become: true
  become_user: "{{ SPLUNK_ACCOUNT_NAME }}"
  ansible.builtin.command:
    cmd: /opt/splunk/bin/splunk stop
    creates: /etc/init.d/splunk

- name: Enable boot-start
  become: true
  ansible.builtin.command:
    cmd: "/opt/splunk/bin/splunk enable boot-start -user {{ SPLUNK_ACCOUNT_NAME }}"
    creates: /etc/init.d/splunk

- name: Open firewall (redhat)
  become: true
  ansible.builtin.command: "{{ item }}"
  with_items:
      - "firewall-cmd --zone=public --permanent --add-port=8000/tcp"
      - "firewall-cmd --reload"
  when: ansible_facts['os_family']|lower == 'redhat'

- name: Install splunk apps
  become: true
  become_user: "{{ SPLUNK_ACCOUNT_NAME }}"
  ansible.builtin.unarchive:
    src: "{{ item.value.src }}"
    dest: /opt/splunk/etc/apps/
  with_items:
    - "{{ splunk.SPLUNK_APPS|dict2items }}"

- name: Install repo apps
  become: true
  become_user: "{{ SPLUNK_ACCOUNT_NAME }}"
  ansible.builtin.git:
    repo: "{{ item.value.repo }}"
    dest: "/opt/splunk/etc/apps/{{ item.key }}"
  with_items:
    - "{{ splunk.REPO_APPS|dict2items }}"

- name: Start splunk
  become: true
  become_user: "{{ SPLUNK_ACCOUNT_NAME }}"
  ansible.builtin.command:
    cmd: /opt/splunk/bin/splunk start
